initSidebarItems({"enum":[["DecodeErrorKind","Enumeration of possible errors which can occur while decoding a structure."],["Error","Enumeration of errors which can occur while encoding a rust value into a TOML value."],["Value","Representation of a TOML value."]],"fn":[["decode","Decodes a TOML value into a decodable type.This function will consume the given TOML value and attempt to decode it into the type specified. If decoding fails, `None` will be returned. If a finer-grained error is desired, then it is recommended to use `Decodable` directly."],["decode_str","Decodes a string into a toml-encoded value.This function will parse the given string into a TOML value, and then parse the TOML value into the desired type. If any error occurs, `None` is returned.If more fine-grained errors are desired, these steps should be driven manually."],["encode","Encodes an encodable value into a TOML value.This function expects the type given to represent a TOML table in some form. If encoding encounters an error, then this function will fail the task."],["encode_str","Encodes an encodable value into a TOML string.This function expects the type given to represent a TOML table in some form. If encoding encounters an error, then this function will fail the task."]],"struct":[["DecodeError","Description for errors which can occur while decoding a type."],["Decoder","A structure to transform TOML values into Rust values.This decoder implements the serialization `Decoder` interface, allowing `Decodable` types to be generated by this decoder. The input is any arbitrary TOML value."],["Encoder","A structure to transform Rust values into TOML values.This encoder implements the serialization `Encoder` interface, allowing `Encodable` rust types to be fed into the encoder. The output of this encoder is a TOML `Table` structure. The resulting TOML can be stringified if necessary.Example"],["Parser","Parser for converting a string to a TOML `Value` instance.This parser contains the string slice that is being parsed, and exports the list of errors which have occurred during parsing."],["ParserError","A structure representing a parse error.The data in this structure can be used to trace back to the original cause of the error in order to provide diagnostics about parse errors."]],"type":[["Array","Type representing a TOML array, payload of the Value::Array variant"],["Table","Type representing a TOML table, payload of the Value::Table variant"]]});